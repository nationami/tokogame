package com.tokogame.domain;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class KoleksiExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table koleksi
     *
     * @ibatorgenerated Fri Apr 19 07:17:48 ICT 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table koleksi
     *
     * @ibatorgenerated Fri Apr 19 07:17:48 ICT 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table koleksi
     *
     * @ibatorgenerated Fri Apr 19 07:17:48 ICT 2013
     */
    public KoleksiExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table koleksi
     *
     * @ibatorgenerated Fri Apr 19 07:17:48 ICT 2013
     */
    protected KoleksiExample(KoleksiExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table koleksi
     *
     * @ibatorgenerated Fri Apr 19 07:17:48 ICT 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table koleksi
     *
     * @ibatorgenerated Fri Apr 19 07:17:48 ICT 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table koleksi
     *
     * @ibatorgenerated Fri Apr 19 07:17:48 ICT 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table koleksi
     *
     * @ibatorgenerated Fri Apr 19 07:17:48 ICT 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table koleksi
     *
     * @ibatorgenerated Fri Apr 19 07:17:48 ICT 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table koleksi
     *
     * @ibatorgenerated Fri Apr 19 07:17:48 ICT 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table koleksi
     *
     * @ibatorgenerated Fri Apr 19 07:17:48 ICT 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table koleksi
     *
     * @ibatorgenerated Fri Apr 19 07:17:48 ICT 2013
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andPkKoleksiIsNull() {
            addCriterion("pk_koleksi is null");
            return this;
        }

        public Criteria andPkKoleksiIsNotNull() {
            addCriterion("pk_koleksi is not null");
            return this;
        }

        public Criteria andPkKoleksiEqualTo(Integer value) {
            addCriterion("pk_koleksi =", value, "pkKoleksi");
            return this;
        }

        public Criteria andPkKoleksiNotEqualTo(Integer value) {
            addCriterion("pk_koleksi <>", value, "pkKoleksi");
            return this;
        }

        public Criteria andPkKoleksiGreaterThan(Integer value) {
            addCriterion("pk_koleksi >", value, "pkKoleksi");
            return this;
        }

        public Criteria andPkKoleksiGreaterThanOrEqualTo(Integer value) {
            addCriterion("pk_koleksi >=", value, "pkKoleksi");
            return this;
        }

        public Criteria andPkKoleksiLessThan(Integer value) {
            addCriterion("pk_koleksi <", value, "pkKoleksi");
            return this;
        }

        public Criteria andPkKoleksiLessThanOrEqualTo(Integer value) {
            addCriterion("pk_koleksi <=", value, "pkKoleksi");
            return this;
        }

        public Criteria andPkKoleksiIn(List<Integer> values) {
            addCriterion("pk_koleksi in", values, "pkKoleksi");
            return this;
        }

        public Criteria andPkKoleksiNotIn(List<Integer> values) {
            addCriterion("pk_koleksi not in", values, "pkKoleksi");
            return this;
        }

        public Criteria andPkKoleksiBetween(Integer value1, Integer value2) {
            addCriterion("pk_koleksi between", value1, value2, "pkKoleksi");
            return this;
        }

        public Criteria andPkKoleksiNotBetween(Integer value1, Integer value2) {
            addCriterion("pk_koleksi not between", value1, value2, "pkKoleksi");
            return this;
        }

        public Criteria andKoleksiNameIsNull() {
            addCriterion("koleksi_name is null");
            return this;
        }

        public Criteria andKoleksiNameIsNotNull() {
            addCriterion("koleksi_name is not null");
            return this;
        }

        public Criteria andKoleksiNameEqualTo(String value) {
            addCriterion("koleksi_name =", value, "koleksiName");
            return this;
        }

        public Criteria andKoleksiNameNotEqualTo(String value) {
            addCriterion("koleksi_name <>", value, "koleksiName");
            return this;
        }

        public Criteria andKoleksiNameGreaterThan(String value) {
            addCriterion("koleksi_name >", value, "koleksiName");
            return this;
        }

        public Criteria andKoleksiNameGreaterThanOrEqualTo(String value) {
            addCriterion("koleksi_name >=", value, "koleksiName");
            return this;
        }

        public Criteria andKoleksiNameLessThan(String value) {
            addCriterion("koleksi_name <", value, "koleksiName");
            return this;
        }

        public Criteria andKoleksiNameLessThanOrEqualTo(String value) {
            addCriterion("koleksi_name <=", value, "koleksiName");
            return this;
        }

        public Criteria andKoleksiNameLike(String value) {
            addCriterion("koleksi_name like", value, "koleksiName");
            return this;
        }

        public Criteria andKoleksiNameNotLike(String value) {
            addCriterion("koleksi_name not like", value, "koleksiName");
            return this;
        }

        public Criteria andKoleksiNameIn(List<String> values) {
            addCriterion("koleksi_name in", values, "koleksiName");
            return this;
        }

        public Criteria andKoleksiNameNotIn(List<String> values) {
            addCriterion("koleksi_name not in", values, "koleksiName");
            return this;
        }

        public Criteria andKoleksiNameBetween(String value1, String value2) {
            addCriterion("koleksi_name between", value1, value2, "koleksiName");
            return this;
        }

        public Criteria andKoleksiNameNotBetween(String value1, String value2) {
            addCriterion("koleksi_name not between", value1, value2, "koleksiName");
            return this;
        }

        public Criteria andKoleksiDescIsNull() {
            addCriterion("koleksi_desc is null");
            return this;
        }

        public Criteria andKoleksiDescIsNotNull() {
            addCriterion("koleksi_desc is not null");
            return this;
        }

        public Criteria andKoleksiDescEqualTo(String value) {
            addCriterion("koleksi_desc =", value, "koleksiDesc");
            return this;
        }

        public Criteria andKoleksiDescNotEqualTo(String value) {
            addCriterion("koleksi_desc <>", value, "koleksiDesc");
            return this;
        }

        public Criteria andKoleksiDescGreaterThan(String value) {
            addCriterion("koleksi_desc >", value, "koleksiDesc");
            return this;
        }

        public Criteria andKoleksiDescGreaterThanOrEqualTo(String value) {
            addCriterion("koleksi_desc >=", value, "koleksiDesc");
            return this;
        }

        public Criteria andKoleksiDescLessThan(String value) {
            addCriterion("koleksi_desc <", value, "koleksiDesc");
            return this;
        }

        public Criteria andKoleksiDescLessThanOrEqualTo(String value) {
            addCriterion("koleksi_desc <=", value, "koleksiDesc");
            return this;
        }

        public Criteria andKoleksiDescLike(String value) {
            addCriterion("koleksi_desc like", value, "koleksiDesc");
            return this;
        }

        public Criteria andKoleksiDescNotLike(String value) {
            addCriterion("koleksi_desc not like", value, "koleksiDesc");
            return this;
        }

        public Criteria andKoleksiDescIn(List<String> values) {
            addCriterion("koleksi_desc in", values, "koleksiDesc");
            return this;
        }

        public Criteria andKoleksiDescNotIn(List<String> values) {
            addCriterion("koleksi_desc not in", values, "koleksiDesc");
            return this;
        }

        public Criteria andKoleksiDescBetween(String value1, String value2) {
            addCriterion("koleksi_desc between", value1, value2, "koleksiDesc");
            return this;
        }

        public Criteria andKoleksiDescNotBetween(String value1, String value2) {
            addCriterion("koleksi_desc not between", value1, value2, "koleksiDesc");
            return this;
        }
    }
}