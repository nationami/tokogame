package com.tokogame.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PenjualanExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table penjualan
     *
     * @ibatorgenerated Fri May 10 01:12:44 ICT 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table penjualan
     *
     * @ibatorgenerated Fri May 10 01:12:44 ICT 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table penjualan
     *
     * @ibatorgenerated Fri May 10 01:12:44 ICT 2013
     */
    public PenjualanExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table penjualan
     *
     * @ibatorgenerated Fri May 10 01:12:44 ICT 2013
     */
    protected PenjualanExample(PenjualanExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table penjualan
     *
     * @ibatorgenerated Fri May 10 01:12:44 ICT 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table penjualan
     *
     * @ibatorgenerated Fri May 10 01:12:44 ICT 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table penjualan
     *
     * @ibatorgenerated Fri May 10 01:12:44 ICT 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table penjualan
     *
     * @ibatorgenerated Fri May 10 01:12:44 ICT 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table penjualan
     *
     * @ibatorgenerated Fri May 10 01:12:44 ICT 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table penjualan
     *
     * @ibatorgenerated Fri May 10 01:12:44 ICT 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table penjualan
     *
     * @ibatorgenerated Fri May 10 01:12:44 ICT 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table penjualan
     *
     * @ibatorgenerated Fri May 10 01:12:44 ICT 2013
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andPkPenjualanIsNull() {
            addCriterion("pk_penjualan is null");
            return this;
        }

        public Criteria andPkPenjualanIsNotNull() {
            addCriterion("pk_penjualan is not null");
            return this;
        }

        public Criteria andPkPenjualanEqualTo(Integer value) {
            addCriterion("pk_penjualan =", value, "pkPenjualan");
            return this;
        }

        public Criteria andPkPenjualanNotEqualTo(Integer value) {
            addCriterion("pk_penjualan <>", value, "pkPenjualan");
            return this;
        }

        public Criteria andPkPenjualanGreaterThan(Integer value) {
            addCriterion("pk_penjualan >", value, "pkPenjualan");
            return this;
        }

        public Criteria andPkPenjualanGreaterThanOrEqualTo(Integer value) {
            addCriterion("pk_penjualan >=", value, "pkPenjualan");
            return this;
        }

        public Criteria andPkPenjualanLessThan(Integer value) {
            addCriterion("pk_penjualan <", value, "pkPenjualan");
            return this;
        }

        public Criteria andPkPenjualanLessThanOrEqualTo(Integer value) {
            addCriterion("pk_penjualan <=", value, "pkPenjualan");
            return this;
        }

        public Criteria andPkPenjualanIn(List<Integer> values) {
            addCriterion("pk_penjualan in", values, "pkPenjualan");
            return this;
        }

        public Criteria andPkPenjualanNotIn(List<Integer> values) {
            addCriterion("pk_penjualan not in", values, "pkPenjualan");
            return this;
        }

        public Criteria andPkPenjualanBetween(Integer value1, Integer value2) {
            addCriterion("pk_penjualan between", value1, value2, "pkPenjualan");
            return this;
        }

        public Criteria andPkPenjualanNotBetween(Integer value1, Integer value2) {
            addCriterion("pk_penjualan not between", value1, value2, "pkPenjualan");
            return this;
        }

        public Criteria andFkBelanjaIsNull() {
            addCriterion("fk_belanja is null");
            return this;
        }

        public Criteria andFkBelanjaIsNotNull() {
            addCriterion("fk_belanja is not null");
            return this;
        }

        public Criteria andFkBelanjaEqualTo(Integer value) {
            addCriterion("fk_belanja =", value, "fkBelanja");
            return this;
        }

        public Criteria andFkBelanjaNotEqualTo(Integer value) {
            addCriterion("fk_belanja <>", value, "fkBelanja");
            return this;
        }

        public Criteria andFkBelanjaGreaterThan(Integer value) {
            addCriterion("fk_belanja >", value, "fkBelanja");
            return this;
        }

        public Criteria andFkBelanjaGreaterThanOrEqualTo(Integer value) {
            addCriterion("fk_belanja >=", value, "fkBelanja");
            return this;
        }

        public Criteria andFkBelanjaLessThan(Integer value) {
            addCriterion("fk_belanja <", value, "fkBelanja");
            return this;
        }

        public Criteria andFkBelanjaLessThanOrEqualTo(Integer value) {
            addCriterion("fk_belanja <=", value, "fkBelanja");
            return this;
        }

        public Criteria andFkBelanjaIn(List<Integer> values) {
            addCriterion("fk_belanja in", values, "fkBelanja");
            return this;
        }

        public Criteria andFkBelanjaNotIn(List<Integer> values) {
            addCriterion("fk_belanja not in", values, "fkBelanja");
            return this;
        }

        public Criteria andFkBelanjaBetween(Integer value1, Integer value2) {
            addCriterion("fk_belanja between", value1, value2, "fkBelanja");
            return this;
        }

        public Criteria andFkBelanjaNotBetween(Integer value1, Integer value2) {
            addCriterion("fk_belanja not between", value1, value2, "fkBelanja");
            return this;
        }

        public Criteria andJualQtyIsNull() {
            addCriterion("jual_qty is null");
            return this;
        }

        public Criteria andJualQtyIsNotNull() {
            addCriterion("jual_qty is not null");
            return this;
        }

        public Criteria andJualQtyEqualTo(Integer value) {
            addCriterion("jual_qty =", value, "jualQty");
            return this;
        }

        public Criteria andJualQtyNotEqualTo(Integer value) {
            addCriterion("jual_qty <>", value, "jualQty");
            return this;
        }

        public Criteria andJualQtyGreaterThan(Integer value) {
            addCriterion("jual_qty >", value, "jualQty");
            return this;
        }

        public Criteria andJualQtyGreaterThanOrEqualTo(Integer value) {
            addCriterion("jual_qty >=", value, "jualQty");
            return this;
        }

        public Criteria andJualQtyLessThan(Integer value) {
            addCriterion("jual_qty <", value, "jualQty");
            return this;
        }

        public Criteria andJualQtyLessThanOrEqualTo(Integer value) {
            addCriterion("jual_qty <=", value, "jualQty");
            return this;
        }

        public Criteria andJualQtyIn(List<Integer> values) {
            addCriterion("jual_qty in", values, "jualQty");
            return this;
        }

        public Criteria andJualQtyNotIn(List<Integer> values) {
            addCriterion("jual_qty not in", values, "jualQty");
            return this;
        }

        public Criteria andJualQtyBetween(Integer value1, Integer value2) {
            addCriterion("jual_qty between", value1, value2, "jualQty");
            return this;
        }

        public Criteria andJualQtyNotBetween(Integer value1, Integer value2) {
            addCriterion("jual_qty not between", value1, value2, "jualQty");
            return this;
        }

        public Criteria andTotalBeliIsNull() {
            addCriterion("total_beli is null");
            return this;
        }

        public Criteria andTotalBeliIsNotNull() {
            addCriterion("total_beli is not null");
            return this;
        }

        public Criteria andTotalBeliEqualTo(Integer value) {
            addCriterion("total_beli =", value, "totalBeli");
            return this;
        }

        public Criteria andTotalBeliNotEqualTo(Integer value) {
            addCriterion("total_beli <>", value, "totalBeli");
            return this;
        }

        public Criteria andTotalBeliGreaterThan(Integer value) {
            addCriterion("total_beli >", value, "totalBeli");
            return this;
        }

        public Criteria andTotalBeliGreaterThanOrEqualTo(Integer value) {
            addCriterion("total_beli >=", value, "totalBeli");
            return this;
        }

        public Criteria andTotalBeliLessThan(Integer value) {
            addCriterion("total_beli <", value, "totalBeli");
            return this;
        }

        public Criteria andTotalBeliLessThanOrEqualTo(Integer value) {
            addCriterion("total_beli <=", value, "totalBeli");
            return this;
        }

        public Criteria andTotalBeliIn(List<Integer> values) {
            addCriterion("total_beli in", values, "totalBeli");
            return this;
        }

        public Criteria andTotalBeliNotIn(List<Integer> values) {
            addCriterion("total_beli not in", values, "totalBeli");
            return this;
        }

        public Criteria andTotalBeliBetween(Integer value1, Integer value2) {
            addCriterion("total_beli between", value1, value2, "totalBeli");
            return this;
        }

        public Criteria andTotalBeliNotBetween(Integer value1, Integer value2) {
            addCriterion("total_beli not between", value1, value2, "totalBeli");
            return this;
        }

        public Criteria andTotalReturIsNull() {
            addCriterion("total_retur is null");
            return this;
        }

        public Criteria andTotalReturIsNotNull() {
            addCriterion("total_retur is not null");
            return this;
        }

        public Criteria andTotalReturEqualTo(Integer value) {
            addCriterion("total_retur =", value, "totalRetur");
            return this;
        }

        public Criteria andTotalReturNotEqualTo(Integer value) {
            addCriterion("total_retur <>", value, "totalRetur");
            return this;
        }

        public Criteria andTotalReturGreaterThan(Integer value) {
            addCriterion("total_retur >", value, "totalRetur");
            return this;
        }

        public Criteria andTotalReturGreaterThanOrEqualTo(Integer value) {
            addCriterion("total_retur >=", value, "totalRetur");
            return this;
        }

        public Criteria andTotalReturLessThan(Integer value) {
            addCriterion("total_retur <", value, "totalRetur");
            return this;
        }

        public Criteria andTotalReturLessThanOrEqualTo(Integer value) {
            addCriterion("total_retur <=", value, "totalRetur");
            return this;
        }

        public Criteria andTotalReturIn(List<Integer> values) {
            addCriterion("total_retur in", values, "totalRetur");
            return this;
        }

        public Criteria andTotalReturNotIn(List<Integer> values) {
            addCriterion("total_retur not in", values, "totalRetur");
            return this;
        }

        public Criteria andTotalReturBetween(Integer value1, Integer value2) {
            addCriterion("total_retur between", value1, value2, "totalRetur");
            return this;
        }

        public Criteria andTotalReturNotBetween(Integer value1, Integer value2) {
            addCriterion("total_retur not between", value1, value2, "totalRetur");
            return this;
        }

        public Criteria andTotalBelanjaIsNull() {
            addCriterion("total_belanja is null");
            return this;
        }

        public Criteria andTotalBelanjaIsNotNull() {
            addCriterion("total_belanja is not null");
            return this;
        }

        public Criteria andTotalBelanjaEqualTo(Integer value) {
            addCriterion("total_belanja =", value, "totalBelanja");
            return this;
        }

        public Criteria andTotalBelanjaNotEqualTo(Integer value) {
            addCriterion("total_belanja <>", value, "totalBelanja");
            return this;
        }

        public Criteria andTotalBelanjaGreaterThan(Integer value) {
            addCriterion("total_belanja >", value, "totalBelanja");
            return this;
        }

        public Criteria andTotalBelanjaGreaterThanOrEqualTo(Integer value) {
            addCriterion("total_belanja >=", value, "totalBelanja");
            return this;
        }

        public Criteria andTotalBelanjaLessThan(Integer value) {
            addCriterion("total_belanja <", value, "totalBelanja");
            return this;
        }

        public Criteria andTotalBelanjaLessThanOrEqualTo(Integer value) {
            addCriterion("total_belanja <=", value, "totalBelanja");
            return this;
        }

        public Criteria andTotalBelanjaIn(List<Integer> values) {
            addCriterion("total_belanja in", values, "totalBelanja");
            return this;
        }

        public Criteria andTotalBelanjaNotIn(List<Integer> values) {
            addCriterion("total_belanja not in", values, "totalBelanja");
            return this;
        }

        public Criteria andTotalBelanjaBetween(Integer value1, Integer value2) {
            addCriterion("total_belanja between", value1, value2, "totalBelanja");
            return this;
        }

        public Criteria andTotalBelanjaNotBetween(Integer value1, Integer value2) {
            addCriterion("total_belanja not between", value1, value2, "totalBelanja");
            return this;
        }

        public Criteria andTotalBayarIsNull() {
            addCriterion("total_bayar is null");
            return this;
        }

        public Criteria andTotalBayarIsNotNull() {
            addCriterion("total_bayar is not null");
            return this;
        }

        public Criteria andTotalBayarEqualTo(Integer value) {
            addCriterion("total_bayar =", value, "totalBayar");
            return this;
        }

        public Criteria andTotalBayarNotEqualTo(Integer value) {
            addCriterion("total_bayar <>", value, "totalBayar");
            return this;
        }

        public Criteria andTotalBayarGreaterThan(Integer value) {
            addCriterion("total_bayar >", value, "totalBayar");
            return this;
        }

        public Criteria andTotalBayarGreaterThanOrEqualTo(Integer value) {
            addCriterion("total_bayar >=", value, "totalBayar");
            return this;
        }

        public Criteria andTotalBayarLessThan(Integer value) {
            addCriterion("total_bayar <", value, "totalBayar");
            return this;
        }

        public Criteria andTotalBayarLessThanOrEqualTo(Integer value) {
            addCriterion("total_bayar <=", value, "totalBayar");
            return this;
        }

        public Criteria andTotalBayarIn(List<Integer> values) {
            addCriterion("total_bayar in", values, "totalBayar");
            return this;
        }

        public Criteria andTotalBayarNotIn(List<Integer> values) {
            addCriterion("total_bayar not in", values, "totalBayar");
            return this;
        }

        public Criteria andTotalBayarBetween(Integer value1, Integer value2) {
            addCriterion("total_bayar between", value1, value2, "totalBayar");
            return this;
        }

        public Criteria andTotalBayarNotBetween(Integer value1, Integer value2) {
            addCriterion("total_bayar not between", value1, value2, "totalBayar");
            return this;
        }

        public Criteria andTotalKembaliIsNull() {
            addCriterion("total_kembali is null");
            return this;
        }

        public Criteria andTotalKembaliIsNotNull() {
            addCriterion("total_kembali is not null");
            return this;
        }

        public Criteria andTotalKembaliEqualTo(Integer value) {
            addCriterion("total_kembali =", value, "totalKembali");
            return this;
        }

        public Criteria andTotalKembaliNotEqualTo(Integer value) {
            addCriterion("total_kembali <>", value, "totalKembali");
            return this;
        }

        public Criteria andTotalKembaliGreaterThan(Integer value) {
            addCriterion("total_kembali >", value, "totalKembali");
            return this;
        }

        public Criteria andTotalKembaliGreaterThanOrEqualTo(Integer value) {
            addCriterion("total_kembali >=", value, "totalKembali");
            return this;
        }

        public Criteria andTotalKembaliLessThan(Integer value) {
            addCriterion("total_kembali <", value, "totalKembali");
            return this;
        }

        public Criteria andTotalKembaliLessThanOrEqualTo(Integer value) {
            addCriterion("total_kembali <=", value, "totalKembali");
            return this;
        }

        public Criteria andTotalKembaliIn(List<Integer> values) {
            addCriterion("total_kembali in", values, "totalKembali");
            return this;
        }

        public Criteria andTotalKembaliNotIn(List<Integer> values) {
            addCriterion("total_kembali not in", values, "totalKembali");
            return this;
        }

        public Criteria andTotalKembaliBetween(Integer value1, Integer value2) {
            addCriterion("total_kembali between", value1, value2, "totalKembali");
            return this;
        }

        public Criteria andTotalKembaliNotBetween(Integer value1, Integer value2) {
            addCriterion("total_kembali not between", value1, value2, "totalKembali");
            return this;
        }

        public Criteria andTanggalJualIsNull() {
            addCriterion("tanggal_jual is null");
            return this;
        }

        public Criteria andTanggalJualIsNotNull() {
            addCriterion("tanggal_jual is not null");
            return this;
        }

        public Criteria andTanggalJualEqualTo(Date value) {
            addCriterion("tanggal_jual =", value, "tanggalJual");
            return this;
        }

        public Criteria andTanggalJualNotEqualTo(Date value) {
            addCriterion("tanggal_jual <>", value, "tanggalJual");
            return this;
        }

        public Criteria andTanggalJualGreaterThan(Date value) {
            addCriterion("tanggal_jual >", value, "tanggalJual");
            return this;
        }

        public Criteria andTanggalJualGreaterThanOrEqualTo(Date value) {
            addCriterion("tanggal_jual >=", value, "tanggalJual");
            return this;
        }

        public Criteria andTanggalJualLessThan(Date value) {
            addCriterion("tanggal_jual <", value, "tanggalJual");
            return this;
        }

        public Criteria andTanggalJualLessThanOrEqualTo(Date value) {
            addCriterion("tanggal_jual <=", value, "tanggalJual");
            return this;
        }

        public Criteria andTanggalJualIn(List<Date> values) {
            addCriterion("tanggal_jual in", values, "tanggalJual");
            return this;
        }

        public Criteria andTanggalJualNotIn(List<Date> values) {
            addCriterion("tanggal_jual not in", values, "tanggalJual");
            return this;
        }

        public Criteria andTanggalJualBetween(Date value1, Date value2) {
            addCriterion("tanggal_jual between", value1, value2, "tanggalJual");
            return this;
        }

        public Criteria andTanggalJualNotBetween(Date value1, Date value2) {
            addCriterion("tanggal_jual not between", value1, value2, "tanggalJual");
            return this;
        }
    }
}