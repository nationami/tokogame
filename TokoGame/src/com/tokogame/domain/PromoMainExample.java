package com.tokogame.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class PromoMainExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table promo_main
     *
     * @ibatorgenerated Sun May 12 15:46:16 ICT 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table promo_main
     *
     * @ibatorgenerated Sun May 12 15:46:16 ICT 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table promo_main
     *
     * @ibatorgenerated Sun May 12 15:46:16 ICT 2013
     */
    public PromoMainExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table promo_main
     *
     * @ibatorgenerated Sun May 12 15:46:16 ICT 2013
     */
    protected PromoMainExample(PromoMainExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table promo_main
     *
     * @ibatorgenerated Sun May 12 15:46:16 ICT 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table promo_main
     *
     * @ibatorgenerated Sun May 12 15:46:16 ICT 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table promo_main
     *
     * @ibatorgenerated Sun May 12 15:46:16 ICT 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table promo_main
     *
     * @ibatorgenerated Sun May 12 15:46:16 ICT 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table promo_main
     *
     * @ibatorgenerated Sun May 12 15:46:16 ICT 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table promo_main
     *
     * @ibatorgenerated Sun May 12 15:46:16 ICT 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table promo_main
     *
     * @ibatorgenerated Sun May 12 15:46:16 ICT 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table promo_main
     *
     * @ibatorgenerated Sun May 12 15:46:16 ICT 2013
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andPkPromoMainIsNull() {
            addCriterion("pk_promo_main is null");
            return this;
        }

        public Criteria andPkPromoMainIsNotNull() {
            addCriterion("pk_promo_main is not null");
            return this;
        }

        public Criteria andPkPromoMainEqualTo(Integer value) {
            addCriterion("pk_promo_main =", value, "pkPromoMain");
            return this;
        }

        public Criteria andPkPromoMainNotEqualTo(Integer value) {
            addCriterion("pk_promo_main <>", value, "pkPromoMain");
            return this;
        }

        public Criteria andPkPromoMainGreaterThan(Integer value) {
            addCriterion("pk_promo_main >", value, "pkPromoMain");
            return this;
        }

        public Criteria andPkPromoMainGreaterThanOrEqualTo(Integer value) {
            addCriterion("pk_promo_main >=", value, "pkPromoMain");
            return this;
        }

        public Criteria andPkPromoMainLessThan(Integer value) {
            addCriterion("pk_promo_main <", value, "pkPromoMain");
            return this;
        }

        public Criteria andPkPromoMainLessThanOrEqualTo(Integer value) {
            addCriterion("pk_promo_main <=", value, "pkPromoMain");
            return this;
        }

        public Criteria andPkPromoMainIn(List<Integer> values) {
            addCriterion("pk_promo_main in", values, "pkPromoMain");
            return this;
        }

        public Criteria andPkPromoMainNotIn(List<Integer> values) {
            addCriterion("pk_promo_main not in", values, "pkPromoMain");
            return this;
        }

        public Criteria andPkPromoMainBetween(Integer value1, Integer value2) {
            addCriterion("pk_promo_main between", value1, value2, "pkPromoMain");
            return this;
        }

        public Criteria andPkPromoMainNotBetween(Integer value1, Integer value2) {
            addCriterion("pk_promo_main not between", value1, value2, "pkPromoMain");
            return this;
        }

        public Criteria andPromoNameIsNull() {
            addCriterion("promo_name is null");
            return this;
        }

        public Criteria andPromoNameIsNotNull() {
            addCriterion("promo_name is not null");
            return this;
        }

        public Criteria andPromoNameEqualTo(String value) {
            addCriterion("promo_name =", value, "promoName");
            return this;
        }

        public Criteria andPromoNameNotEqualTo(String value) {
            addCriterion("promo_name <>", value, "promoName");
            return this;
        }

        public Criteria andPromoNameGreaterThan(String value) {
            addCriterion("promo_name >", value, "promoName");
            return this;
        }

        public Criteria andPromoNameGreaterThanOrEqualTo(String value) {
            addCriterion("promo_name >=", value, "promoName");
            return this;
        }

        public Criteria andPromoNameLessThan(String value) {
            addCriterion("promo_name <", value, "promoName");
            return this;
        }

        public Criteria andPromoNameLessThanOrEqualTo(String value) {
            addCriterion("promo_name <=", value, "promoName");
            return this;
        }

        public Criteria andPromoNameLike(String value) {
            addCriterion("promo_name like", value, "promoName");
            return this;
        }

        public Criteria andPromoNameNotLike(String value) {
            addCriterion("promo_name not like", value, "promoName");
            return this;
        }

        public Criteria andPromoNameIn(List<String> values) {
            addCriterion("promo_name in", values, "promoName");
            return this;
        }

        public Criteria andPromoNameNotIn(List<String> values) {
            addCriterion("promo_name not in", values, "promoName");
            return this;
        }

        public Criteria andPromoNameBetween(String value1, String value2) {
            addCriterion("promo_name between", value1, value2, "promoName");
            return this;
        }

        public Criteria andPromoNameNotBetween(String value1, String value2) {
            addCriterion("promo_name not between", value1, value2, "promoName");
            return this;
        }

        public Criteria andPromoDescIsNull() {
            addCriterion("promo_desc is null");
            return this;
        }

        public Criteria andPromoDescIsNotNull() {
            addCriterion("promo_desc is not null");
            return this;
        }

        public Criteria andPromoDescEqualTo(String value) {
            addCriterion("promo_desc =", value, "promoDesc");
            return this;
        }

        public Criteria andPromoDescNotEqualTo(String value) {
            addCriterion("promo_desc <>", value, "promoDesc");
            return this;
        }

        public Criteria andPromoDescGreaterThan(String value) {
            addCriterion("promo_desc >", value, "promoDesc");
            return this;
        }

        public Criteria andPromoDescGreaterThanOrEqualTo(String value) {
            addCriterion("promo_desc >=", value, "promoDesc");
            return this;
        }

        public Criteria andPromoDescLessThan(String value) {
            addCriterion("promo_desc <", value, "promoDesc");
            return this;
        }

        public Criteria andPromoDescLessThanOrEqualTo(String value) {
            addCriterion("promo_desc <=", value, "promoDesc");
            return this;
        }

        public Criteria andPromoDescLike(String value) {
            addCriterion("promo_desc like", value, "promoDesc");
            return this;
        }

        public Criteria andPromoDescNotLike(String value) {
            addCriterion("promo_desc not like", value, "promoDesc");
            return this;
        }

        public Criteria andPromoDescIn(List<String> values) {
            addCriterion("promo_desc in", values, "promoDesc");
            return this;
        }

        public Criteria andPromoDescNotIn(List<String> values) {
            addCriterion("promo_desc not in", values, "promoDesc");
            return this;
        }

        public Criteria andPromoDescBetween(String value1, String value2) {
            addCriterion("promo_desc between", value1, value2, "promoDesc");
            return this;
        }

        public Criteria andPromoDescNotBetween(String value1, String value2) {
            addCriterion("promo_desc not between", value1, value2, "promoDesc");
            return this;
        }

        public Criteria andPromoActiveIsNull() {
            addCriterion("promo_active is null");
            return this;
        }

        public Criteria andPromoActiveIsNotNull() {
            addCriterion("promo_active is not null");
            return this;
        }

        public Criteria andPromoActiveEqualTo(Integer value) {
            addCriterion("promo_active =", value, "promoActive");
            return this;
        }

        public Criteria andPromoActiveNotEqualTo(Integer value) {
            addCriterion("promo_active <>", value, "promoActive");
            return this;
        }

        public Criteria andPromoActiveGreaterThan(Integer value) {
            addCriterion("promo_active >", value, "promoActive");
            return this;
        }

        public Criteria andPromoActiveGreaterThanOrEqualTo(Integer value) {
            addCriterion("promo_active >=", value, "promoActive");
            return this;
        }

        public Criteria andPromoActiveLessThan(Integer value) {
            addCriterion("promo_active <", value, "promoActive");
            return this;
        }

        public Criteria andPromoActiveLessThanOrEqualTo(Integer value) {
            addCriterion("promo_active <=", value, "promoActive");
            return this;
        }

        public Criteria andPromoActiveIn(List<Integer> values) {
            addCriterion("promo_active in", values, "promoActive");
            return this;
        }

        public Criteria andPromoActiveNotIn(List<Integer> values) {
            addCriterion("promo_active not in", values, "promoActive");
            return this;
        }

        public Criteria andPromoActiveBetween(Integer value1, Integer value2) {
            addCriterion("promo_active between", value1, value2, "promoActive");
            return this;
        }

        public Criteria andPromoActiveNotBetween(Integer value1, Integer value2) {
            addCriterion("promo_active not between", value1, value2, "promoActive");
            return this;
        }

        public Criteria andPromoActiveDateIsNull() {
            addCriterion("promo_active_date is null");
            return this;
        }

        public Criteria andPromoActiveDateIsNotNull() {
            addCriterion("promo_active_date is not null");
            return this;
        }

        public Criteria andPromoActiveDateEqualTo(Date value) {
            addCriterionForJDBCDate("promo_active_date =", value, "promoActiveDate");
            return this;
        }

        public Criteria andPromoActiveDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("promo_active_date <>", value, "promoActiveDate");
            return this;
        }

        public Criteria andPromoActiveDateGreaterThan(Date value) {
            addCriterionForJDBCDate("promo_active_date >", value, "promoActiveDate");
            return this;
        }

        public Criteria andPromoActiveDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("promo_active_date >=", value, "promoActiveDate");
            return this;
        }

        public Criteria andPromoActiveDateLessThan(Date value) {
            addCriterionForJDBCDate("promo_active_date <", value, "promoActiveDate");
            return this;
        }

        public Criteria andPromoActiveDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("promo_active_date <=", value, "promoActiveDate");
            return this;
        }

        public Criteria andPromoActiveDateIn(List<Date> values) {
            addCriterionForJDBCDate("promo_active_date in", values, "promoActiveDate");
            return this;
        }

        public Criteria andPromoActiveDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("promo_active_date not in", values, "promoActiveDate");
            return this;
        }

        public Criteria andPromoActiveDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("promo_active_date between", value1, value2, "promoActiveDate");
            return this;
        }

        public Criteria andPromoActiveDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("promo_active_date not between", value1, value2, "promoActiveDate");
            return this;
        }
    }
}