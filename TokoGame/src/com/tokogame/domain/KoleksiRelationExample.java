package com.tokogame.domain;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class KoleksiRelationExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table koleksi_relation
     *
     * @ibatorgenerated Fri Apr 19 07:17:48 ICT 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table koleksi_relation
     *
     * @ibatorgenerated Fri Apr 19 07:17:48 ICT 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table koleksi_relation
     *
     * @ibatorgenerated Fri Apr 19 07:17:48 ICT 2013
     */
    public KoleksiRelationExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table koleksi_relation
     *
     * @ibatorgenerated Fri Apr 19 07:17:48 ICT 2013
     */
    protected KoleksiRelationExample(KoleksiRelationExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table koleksi_relation
     *
     * @ibatorgenerated Fri Apr 19 07:17:48 ICT 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table koleksi_relation
     *
     * @ibatorgenerated Fri Apr 19 07:17:48 ICT 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table koleksi_relation
     *
     * @ibatorgenerated Fri Apr 19 07:17:48 ICT 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table koleksi_relation
     *
     * @ibatorgenerated Fri Apr 19 07:17:48 ICT 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table koleksi_relation
     *
     * @ibatorgenerated Fri Apr 19 07:17:48 ICT 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table koleksi_relation
     *
     * @ibatorgenerated Fri Apr 19 07:17:48 ICT 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table koleksi_relation
     *
     * @ibatorgenerated Fri Apr 19 07:17:48 ICT 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table koleksi_relation
     *
     * @ibatorgenerated Fri Apr 19 07:17:48 ICT 2013
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andPkKoleksiRelationIsNull() {
            addCriterion("pk_koleksi_relation is null");
            return this;
        }

        public Criteria andPkKoleksiRelationIsNotNull() {
            addCriterion("pk_koleksi_relation is not null");
            return this;
        }

        public Criteria andPkKoleksiRelationEqualTo(Integer value) {
            addCriterion("pk_koleksi_relation =", value, "pkKoleksiRelation");
            return this;
        }

        public Criteria andPkKoleksiRelationNotEqualTo(Integer value) {
            addCriterion("pk_koleksi_relation <>", value, "pkKoleksiRelation");
            return this;
        }

        public Criteria andPkKoleksiRelationGreaterThan(Integer value) {
            addCriterion("pk_koleksi_relation >", value, "pkKoleksiRelation");
            return this;
        }

        public Criteria andPkKoleksiRelationGreaterThanOrEqualTo(Integer value) {
            addCriterion("pk_koleksi_relation >=", value, "pkKoleksiRelation");
            return this;
        }

        public Criteria andPkKoleksiRelationLessThan(Integer value) {
            addCriterion("pk_koleksi_relation <", value, "pkKoleksiRelation");
            return this;
        }

        public Criteria andPkKoleksiRelationLessThanOrEqualTo(Integer value) {
            addCriterion("pk_koleksi_relation <=", value, "pkKoleksiRelation");
            return this;
        }

        public Criteria andPkKoleksiRelationIn(List<Integer> values) {
            addCriterion("pk_koleksi_relation in", values, "pkKoleksiRelation");
            return this;
        }

        public Criteria andPkKoleksiRelationNotIn(List<Integer> values) {
            addCriterion("pk_koleksi_relation not in", values, "pkKoleksiRelation");
            return this;
        }

        public Criteria andPkKoleksiRelationBetween(Integer value1, Integer value2) {
            addCriterion("pk_koleksi_relation between", value1, value2, "pkKoleksiRelation");
            return this;
        }

        public Criteria andPkKoleksiRelationNotBetween(Integer value1, Integer value2) {
            addCriterion("pk_koleksi_relation not between", value1, value2, "pkKoleksiRelation");
            return this;
        }

        public Criteria andFkKoleksiIsNull() {
            addCriterion("fk_koleksi is null");
            return this;
        }

        public Criteria andFkKoleksiIsNotNull() {
            addCriterion("fk_koleksi is not null");
            return this;
        }

        public Criteria andFkKoleksiEqualTo(Integer value) {
            addCriterion("fk_koleksi =", value, "fkKoleksi");
            return this;
        }

        public Criteria andFkKoleksiNotEqualTo(Integer value) {
            addCriterion("fk_koleksi <>", value, "fkKoleksi");
            return this;
        }

        public Criteria andFkKoleksiGreaterThan(Integer value) {
            addCriterion("fk_koleksi >", value, "fkKoleksi");
            return this;
        }

        public Criteria andFkKoleksiGreaterThanOrEqualTo(Integer value) {
            addCriterion("fk_koleksi >=", value, "fkKoleksi");
            return this;
        }

        public Criteria andFkKoleksiLessThan(Integer value) {
            addCriterion("fk_koleksi <", value, "fkKoleksi");
            return this;
        }

        public Criteria andFkKoleksiLessThanOrEqualTo(Integer value) {
            addCriterion("fk_koleksi <=", value, "fkKoleksi");
            return this;
        }

        public Criteria andFkKoleksiIn(List<Integer> values) {
            addCriterion("fk_koleksi in", values, "fkKoleksi");
            return this;
        }

        public Criteria andFkKoleksiNotIn(List<Integer> values) {
            addCriterion("fk_koleksi not in", values, "fkKoleksi");
            return this;
        }

        public Criteria andFkKoleksiBetween(Integer value1, Integer value2) {
            addCriterion("fk_koleksi between", value1, value2, "fkKoleksi");
            return this;
        }

        public Criteria andFkKoleksiNotBetween(Integer value1, Integer value2) {
            addCriterion("fk_koleksi not between", value1, value2, "fkKoleksi");
            return this;
        }

        public Criteria andFkKategoriIsNull() {
            addCriterion("fk_kategori is null");
            return this;
        }

        public Criteria andFkKategoriIsNotNull() {
            addCriterion("fk_kategori is not null");
            return this;
        }

        public Criteria andFkKategoriEqualTo(Integer value) {
            addCriterion("fk_kategori =", value, "fkKategori");
            return this;
        }

        public Criteria andFkKategoriNotEqualTo(Integer value) {
            addCriterion("fk_kategori <>", value, "fkKategori");
            return this;
        }

        public Criteria andFkKategoriGreaterThan(Integer value) {
            addCriterion("fk_kategori >", value, "fkKategori");
            return this;
        }

        public Criteria andFkKategoriGreaterThanOrEqualTo(Integer value) {
            addCriterion("fk_kategori >=", value, "fkKategori");
            return this;
        }

        public Criteria andFkKategoriLessThan(Integer value) {
            addCriterion("fk_kategori <", value, "fkKategori");
            return this;
        }

        public Criteria andFkKategoriLessThanOrEqualTo(Integer value) {
            addCriterion("fk_kategori <=", value, "fkKategori");
            return this;
        }

        public Criteria andFkKategoriIn(List<Integer> values) {
            addCriterion("fk_kategori in", values, "fkKategori");
            return this;
        }

        public Criteria andFkKategoriNotIn(List<Integer> values) {
            addCriterion("fk_kategori not in", values, "fkKategori");
            return this;
        }

        public Criteria andFkKategoriBetween(Integer value1, Integer value2) {
            addCriterion("fk_kategori between", value1, value2, "fkKategori");
            return this;
        }

        public Criteria andFkKategoriNotBetween(Integer value1, Integer value2) {
            addCriterion("fk_kategori not between", value1, value2, "fkKategori");
            return this;
        }
    }
}