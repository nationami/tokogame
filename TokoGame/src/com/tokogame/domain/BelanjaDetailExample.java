package com.tokogame.domain;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BelanjaDetailExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table belanja_detail
     *
     * @ibatorgenerated Wed May 01 17:10:12 ICT 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table belanja_detail
     *
     * @ibatorgenerated Wed May 01 17:10:12 ICT 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table belanja_detail
     *
     * @ibatorgenerated Wed May 01 17:10:12 ICT 2013
     */
    public BelanjaDetailExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table belanja_detail
     *
     * @ibatorgenerated Wed May 01 17:10:12 ICT 2013
     */
    protected BelanjaDetailExample(BelanjaDetailExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table belanja_detail
     *
     * @ibatorgenerated Wed May 01 17:10:12 ICT 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table belanja_detail
     *
     * @ibatorgenerated Wed May 01 17:10:12 ICT 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table belanja_detail
     *
     * @ibatorgenerated Wed May 01 17:10:12 ICT 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table belanja_detail
     *
     * @ibatorgenerated Wed May 01 17:10:12 ICT 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table belanja_detail
     *
     * @ibatorgenerated Wed May 01 17:10:12 ICT 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table belanja_detail
     *
     * @ibatorgenerated Wed May 01 17:10:12 ICT 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table belanja_detail
     *
     * @ibatorgenerated Wed May 01 17:10:12 ICT 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table belanja_detail
     *
     * @ibatorgenerated Wed May 01 17:10:12 ICT 2013
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andPkBelanjaDetailIsNull() {
            addCriterion("pk_belanja_detail is null");
            return this;
        }

        public Criteria andPkBelanjaDetailIsNotNull() {
            addCriterion("pk_belanja_detail is not null");
            return this;
        }

        public Criteria andPkBelanjaDetailEqualTo(Integer value) {
            addCriterion("pk_belanja_detail =", value, "pkBelanjaDetail");
            return this;
        }

        public Criteria andPkBelanjaDetailNotEqualTo(Integer value) {
            addCriterion("pk_belanja_detail <>", value, "pkBelanjaDetail");
            return this;
        }

        public Criteria andPkBelanjaDetailGreaterThan(Integer value) {
            addCriterion("pk_belanja_detail >", value, "pkBelanjaDetail");
            return this;
        }

        public Criteria andPkBelanjaDetailGreaterThanOrEqualTo(Integer value) {
            addCriterion("pk_belanja_detail >=", value, "pkBelanjaDetail");
            return this;
        }

        public Criteria andPkBelanjaDetailLessThan(Integer value) {
            addCriterion("pk_belanja_detail <", value, "pkBelanjaDetail");
            return this;
        }

        public Criteria andPkBelanjaDetailLessThanOrEqualTo(Integer value) {
            addCriterion("pk_belanja_detail <=", value, "pkBelanjaDetail");
            return this;
        }

        public Criteria andPkBelanjaDetailIn(List<Integer> values) {
            addCriterion("pk_belanja_detail in", values, "pkBelanjaDetail");
            return this;
        }

        public Criteria andPkBelanjaDetailNotIn(List<Integer> values) {
            addCriterion("pk_belanja_detail not in", values, "pkBelanjaDetail");
            return this;
        }

        public Criteria andPkBelanjaDetailBetween(Integer value1, Integer value2) {
            addCriterion("pk_belanja_detail between", value1, value2, "pkBelanjaDetail");
            return this;
        }

        public Criteria andPkBelanjaDetailNotBetween(Integer value1, Integer value2) {
            addCriterion("pk_belanja_detail not between", value1, value2, "pkBelanjaDetail");
            return this;
        }

        public Criteria andFkBelanjaIsNull() {
            addCriterion("fk_belanja is null");
            return this;
        }

        public Criteria andFkBelanjaIsNotNull() {
            addCriterion("fk_belanja is not null");
            return this;
        }

        public Criteria andFkBelanjaEqualTo(Integer value) {
            addCriterion("fk_belanja =", value, "fkBelanja");
            return this;
        }

        public Criteria andFkBelanjaNotEqualTo(Integer value) {
            addCriterion("fk_belanja <>", value, "fkBelanja");
            return this;
        }

        public Criteria andFkBelanjaGreaterThan(Integer value) {
            addCriterion("fk_belanja >", value, "fkBelanja");
            return this;
        }

        public Criteria andFkBelanjaGreaterThanOrEqualTo(Integer value) {
            addCriterion("fk_belanja >=", value, "fkBelanja");
            return this;
        }

        public Criteria andFkBelanjaLessThan(Integer value) {
            addCriterion("fk_belanja <", value, "fkBelanja");
            return this;
        }

        public Criteria andFkBelanjaLessThanOrEqualTo(Integer value) {
            addCriterion("fk_belanja <=", value, "fkBelanja");
            return this;
        }

        public Criteria andFkBelanjaIn(List<Integer> values) {
            addCriterion("fk_belanja in", values, "fkBelanja");
            return this;
        }

        public Criteria andFkBelanjaNotIn(List<Integer> values) {
            addCriterion("fk_belanja not in", values, "fkBelanja");
            return this;
        }

        public Criteria andFkBelanjaBetween(Integer value1, Integer value2) {
            addCriterion("fk_belanja between", value1, value2, "fkBelanja");
            return this;
        }

        public Criteria andFkBelanjaNotBetween(Integer value1, Integer value2) {
            addCriterion("fk_belanja not between", value1, value2, "fkBelanja");
            return this;
        }

        public Criteria andFkItemIsNull() {
            addCriterion("fk_item is null");
            return this;
        }

        public Criteria andFkItemIsNotNull() {
            addCriterion("fk_item is not null");
            return this;
        }

        public Criteria andFkItemEqualTo(Integer value) {
            addCriterion("fk_item =", value, "fkItem");
            return this;
        }

        public Criteria andFkItemNotEqualTo(Integer value) {
            addCriterion("fk_item <>", value, "fkItem");
            return this;
        }

        public Criteria andFkItemGreaterThan(Integer value) {
            addCriterion("fk_item >", value, "fkItem");
            return this;
        }

        public Criteria andFkItemGreaterThanOrEqualTo(Integer value) {
            addCriterion("fk_item >=", value, "fkItem");
            return this;
        }

        public Criteria andFkItemLessThan(Integer value) {
            addCriterion("fk_item <", value, "fkItem");
            return this;
        }

        public Criteria andFkItemLessThanOrEqualTo(Integer value) {
            addCriterion("fk_item <=", value, "fkItem");
            return this;
        }

        public Criteria andFkItemIn(List<Integer> values) {
            addCriterion("fk_item in", values, "fkItem");
            return this;
        }

        public Criteria andFkItemNotIn(List<Integer> values) {
            addCriterion("fk_item not in", values, "fkItem");
            return this;
        }

        public Criteria andFkItemBetween(Integer value1, Integer value2) {
            addCriterion("fk_item between", value1, value2, "fkItem");
            return this;
        }

        public Criteria andFkItemNotBetween(Integer value1, Integer value2) {
            addCriterion("fk_item not between", value1, value2, "fkItem");
            return this;
        }

        public Criteria andQtyIsNull() {
            addCriterion("qty is null");
            return this;
        }

        public Criteria andQtyIsNotNull() {
            addCriterion("qty is not null");
            return this;
        }

        public Criteria andQtyEqualTo(Integer value) {
            addCriterion("qty =", value, "qty");
            return this;
        }

        public Criteria andQtyNotEqualTo(Integer value) {
            addCriterion("qty <>", value, "qty");
            return this;
        }

        public Criteria andQtyGreaterThan(Integer value) {
            addCriterion("qty >", value, "qty");
            return this;
        }

        public Criteria andQtyGreaterThanOrEqualTo(Integer value) {
            addCriterion("qty >=", value, "qty");
            return this;
        }

        public Criteria andQtyLessThan(Integer value) {
            addCriterion("qty <", value, "qty");
            return this;
        }

        public Criteria andQtyLessThanOrEqualTo(Integer value) {
            addCriterion("qty <=", value, "qty");
            return this;
        }

        public Criteria andQtyIn(List<Integer> values) {
            addCriterion("qty in", values, "qty");
            return this;
        }

        public Criteria andQtyNotIn(List<Integer> values) {
            addCriterion("qty not in", values, "qty");
            return this;
        }

        public Criteria andQtyBetween(Integer value1, Integer value2) {
            addCriterion("qty between", value1, value2, "qty");
            return this;
        }

        public Criteria andQtyNotBetween(Integer value1, Integer value2) {
            addCriterion("qty not between", value1, value2, "qty");
            return this;
        }
    }
}