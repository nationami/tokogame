package com.tokogame.dao;

import com.tokogame.domain.BelanjaDetail;
import com.tokogame.domain.BelanjaDetailExample;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class BelanjaDetailDAOImpl extends SqlMapClientDaoSupport implements BelanjaDetailDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table belanja_detail
     *
     * @ibatorgenerated Wed May 01 17:10:12 ICT 2013
     */
    public BelanjaDetailDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table belanja_detail
     *
     * @ibatorgenerated Wed May 01 17:10:12 ICT 2013
     */
    public int countByExample(BelanjaDetailExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("belanja_detail.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table belanja_detail
     *
     * @ibatorgenerated Wed May 01 17:10:12 ICT 2013
     */
    public int deleteByExample(BelanjaDetailExample example) {
        int rows = getSqlMapClientTemplate().delete("belanja_detail.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table belanja_detail
     *
     * @ibatorgenerated Wed May 01 17:10:12 ICT 2013
     */
    public int deleteByPrimaryKey(Integer pkBelanjaDetail) {
        BelanjaDetail key = new BelanjaDetail();
        key.setPkBelanjaDetail(pkBelanjaDetail);
        int rows = getSqlMapClientTemplate().delete("belanja_detail.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table belanja_detail
     *
     * @ibatorgenerated Wed May 01 17:10:12 ICT 2013
     */
    public void insert(BelanjaDetail record) {
        getSqlMapClientTemplate().insert("belanja_detail.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table belanja_detail
     *
     * @ibatorgenerated Wed May 01 17:10:12 ICT 2013
     */
    public void insertSelective(BelanjaDetail record) {
        getSqlMapClientTemplate().insert("belanja_detail.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table belanja_detail
     *
     * @ibatorgenerated Wed May 01 17:10:12 ICT 2013
     */
    @SuppressWarnings("unchecked")
    public List<BelanjaDetail> selectByExample(BelanjaDetailExample example) {
        List<BelanjaDetail> list = getSqlMapClientTemplate().queryForList("belanja_detail.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table belanja_detail
     *
     * @ibatorgenerated Wed May 01 17:10:12 ICT 2013
     */
    public BelanjaDetail selectByPrimaryKey(Integer pkBelanjaDetail) {
        BelanjaDetail key = new BelanjaDetail();
        key.setPkBelanjaDetail(pkBelanjaDetail);
        BelanjaDetail record = (BelanjaDetail) getSqlMapClientTemplate().queryForObject("belanja_detail.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table belanja_detail
     *
     * @ibatorgenerated Wed May 01 17:10:12 ICT 2013
     */
    public int updateByExampleSelective(BelanjaDetail record, BelanjaDetailExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("belanja_detail.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table belanja_detail
     *
     * @ibatorgenerated Wed May 01 17:10:12 ICT 2013
     */
    public int updateByExample(BelanjaDetail record, BelanjaDetailExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("belanja_detail.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table belanja_detail
     *
     * @ibatorgenerated Wed May 01 17:10:12 ICT 2013
     */
    public int updateByPrimaryKeySelective(BelanjaDetail record) {
        int rows = getSqlMapClientTemplate().update("belanja_detail.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table belanja_detail
     *
     * @ibatorgenerated Wed May 01 17:10:12 ICT 2013
     */
    public int updateByPrimaryKey(BelanjaDetail record) {
        int rows = getSqlMapClientTemplate().update("belanja_detail.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table belanja_detail
     *
     * @ibatorgenerated Wed May 01 17:10:12 ICT 2013
     */
    private static class UpdateByExampleParms extends BelanjaDetailExample {
        private Object record;

        public UpdateByExampleParms(Object record, BelanjaDetailExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}