<?xml version="1.0"?>
<!-- ********************************************************************* -->
<!-- Ant build script for Toko Game Apps                                        -->
<!-- Mardy : 12/04/2013 : Initial Version					               -->
<!-- $Date: 2013-04-12 14:42:21 +0700 (Friday, 12 Apr 2013) $				   -->
<!-- $Revision: 2725 $													   -->	
<!-- $LastChangedBy: Mardy $											   -->
<!-- ********************************************************************* -->

<project name="TokoGame" default="dist" basedir=".">
	<description>TokoGame</description>

	<property file="build.properties" />
	
	<property name="configure.opensso" value="false" />
	<property name="project.name" value="${ant.project.name}" />
	<property name="version" value="1.0" />
	<property name="warfile" value="${project.name}.war" />
	<property name="deploy.name" value="${project.name}.war" />

	<property name="web.dir" value="WebContent" />
	<property name="build.dir" location="${web.dir}/WEB-INF" />
	<property name="dist.dir" location="dist" />
	<property name="project.libs" location="${build.dir}/lib" />
	<property name="src.dir" value="src" />
	<property name="gensrc.dir" value="gen-src" />
	<property name="classes.dir" value="${build.dir}/classes" />
	<property name="jboss.deploy.dir" value="${server.home}${server.deployer}"/>
	
	<property name="test.dir" value="${basedir}/test"/>
    <property name="test.lib" value="${basedir}/lib"/>
    <property name="test.reports.dir" value="${basedir}/reports"/>

	<path id="base.path">
		<fileset dir="lib">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${project.libs}">
			<include name="**/*.jar" />
		</fileset>
		<!--JBoss Library -->
		<fileset dir="${server.home}/common/lib">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- Init -->
	<target name="init">
		<loadfile property="prop.content" srcFile="./build.properties"/>
		<echo>Using JAVA_HOME=${java.home}</echo>
		<echo>Current cofiguration (Make sure these are correct) :</echo>
		<echo>${prop.content}</echo>
		<tstamp>
			<format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
		</tstamp>

		<mkdir dir="${dist.dir}" />
		<mkdir dir="${classes.dir}" />
	</target>

	<!-- Clean -->
	<target name="clean" description="clean-up">
		<delete dir="${dist.dir}" />
		<delete dir="${classes.dir}" />
	</target>

	<!-- Compile -->
	<target name="compile" depends="init" description="Compiles the source code">
		<copy todir="${classes.dir}">
			<fileset dir="${gensrc.dir}">
				<include name="**/*.xml"/>
			</fileset>
		</copy>	
		<javac 
			   source="1.6"
		       target="1.6"
			   srcdir="${gensrc.dir}"
		       destdir="${classes.dir}">
			<classpath>
				<path refid="base.path" />
			</classpath>
			<exclude name="**/*.xml"/>
		</javac>
		<copy todir="${classes.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.properties"/>
				<include name="**/*.xml"/>
				<include name="**/*.html"/>
			</fileset>
		</copy>	
		<javac 
			   source="1.6"
		       target="1.6"
			   srcdir="${src.dir}"
		       destdir="${classes.dir}">
			<classpath>
				<pathelement location="${classes.dir}"/>
				<path refid="base.path" />
			</classpath>
			<exclude name="**/*.properties"/>
			<exclude name="**/*.xml"/>
		</javac>

	</target>

	<!-- Dist -->
	<target name="dist" depends="compile" description="Generates the distribution file">
		<delete file="${dist.dir}/${warfile}"/>
		<delete file="${dist.dir}/${srcfile}"/>

		<!-- war -->
		<war destfile="${dist.dir}/${warfile}" webxml="${web.dir}/WEB-INF/web.xml">
			<fileset dir="${web.dir}">
				<include name="css/**/*" />
				<include name="img/**/*" />
				<include name="jquery/**/*" />
				<include name="js/**/*" />				
				<include name="*.jsp" />
			</fileset>
			<webinf dir="${web.dir}/WEB-INF">
				<include name="*.xml" />
				<include name="*.properties" />
				<include name="pages/**/*" />
				<include name="taglib/*.tld" />
				<exclude name="web.xml" />
			</webinf>
			<lib dir="${project.libs}" />
			<classes dir="${classes.dir}" />
			<manifest>
				<attribute name="Implementation-Version" value="${version}" />
				<attribute name="Built-Date" value="${TODAY}" />
			</manifest>
		</war>
	</target>
	
	<!-- iBator Artifact Generation for common -->
		<target name="gen-dao" description="Generate the iBatis artifact files">
	        <taskdef name="ibator"
	                 classname="org.apache.ibatis.ibator.ant.IbatorAntTask"
	                 classpathref="base.path"/>
	        <ibator overwrite="true" configfile="${basedir}/db/ibatorConfig_database.xml" verbose="false">
	            <propertyset>
	                <propertyref name="generated.source.dir"/>
	            </propertyset>
	        </ibator>
	    </target>
		
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${basedir}/lib/ant-contrib-1.0b3.jar"/>
		</classpath>
	</taskdef>
	
	<condition property="isWindows">
		<os family="windows" />
	</condition>

	<condition property="isUnix">
		<os family="unix" />
	</condition>
	
	<target name="deploy" depends="dist" description="Deploying to server...">
		<echo>Deploying to server...</echo>
		<copy file="${dist.dir}/${warfile}" todir="${server.home}/${server.deployer}" verbose="true" />
		<echo>Deployed</echo>
	</target>
	
	<!-- Deploy via FTP -->
	<target name="deploy-ftp" depends="dist" description="Deploying to server via FTP...">
		<echo>Deploying to server via FTP...</echo>
		  <ftp server="${ftp.server}"
		       port="${ftp.port}"
		       remotedir="${ftp.remotedir}"
		       userid="${ftp.userid}"
		       password="${ftp.password}"
		       passive="yes"
		       depends="yes"
			   binary="yes"
			   >
		    <fileset dir="${dist.dir}">
		      <include name="${warfile}"/>
		    </fileset>
		  </ftp>
		<echo>Deployed</echo>
	</target>
	
	<target name="build-test" depends="compile" description="Compile all test java files and store in /build/classes directory">
        <javac fork="true" memoryinitialsize="256M" memorymaximumsize="512M"
                   encoding="8859_1" srcdir="${test.dir}"
                   destdir="${classes.dir}" debug="true" includes="**/*.java">
                <classpath>
                    <fileset dir="${test.lib}" includes="**/*.jar"/>
                </classpath>
        </javac>
        <copy todir="${classes.dir}">
			<fileset dir="${test.dir}" includes="**/*.xml" />
			<fileset dir="${test.dir}" includes="**/*.properties" />
		</copy>
    </target>
	
	<target name="run-test" depends="init, build-test" description="Run actual testing activities">
        <mkdir dir="${test.reports.dir}/raw"/>
        <mkdir dir="${test.reports.dir}/html"/>
        <junit printsummary="yes" haltonfailure="yes">
            <classpath>
                <pathelement location="${classes.dir}"/>
                <fileset dir="${test.lib}" includes="**/*.jar"/>
				<fileset dir="${project.libs}" includes="**/*.jar"/>
            </classpath>

            <batchtest fork="yes" todir="${test.reports.dir}/raw">
                <formatter type="xml"/>
                <fileset dir="${test.dir}">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="test" depends="run-test" description="Run Test and produce reports">
        <junitreport todir="${test.reports.dir}">
            <fileset dir="${test.reports.dir}/raw">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${test.reports.dir}/html"/>
        </junitreport>
    </target>

</project>
